{"name": "test_Calculator_ValidAdditionOperation_LoginSuccessAndTokenReturned", "status": "broken", "statusDetails": {"message": "TypeError: 'int' object is not subscriptable", "trace": "self = <test_calculator.TestCalculate object at 0x000001F591C50380>\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.description('Test valid addition operation after successful login and ensure token is returned')\n    def test_Calculator_ValidAdditionOperation_LoginSuccessAndTokenReturned(self):\n        logging.info('Starting test for valid addition operation with login.')\n    \n        login_data = {\n            'userName': 'admin',\n            'password': '123'\n        }\n    \n        logging.info(f'Attempting to log in with credentials: {login_data}')\n        login_response = self.client.post('/login', data=json.dumps(login_data), content_type='application/json')\n        assert 200 == login_response.status_code\n        logging.info(f'Login response status code: {login_response.status_code}')\n        login_response_data = json.loads(login_response.get_data())\n        assert 'success' == login_response_data['status']\n        logging.info(f'Login response data: {login_response_data}')\n        assert login_response_data['data']['token'] is not None, \"Token is missing in the response data.\"\n        token = login_response_data['data']['token']\n        logging.info(f'Token received: {token}')\n        logging.info('Starting test for valid addition operation.')\n    \n        calculation_data = {\n            'op1': 5,\n            'operation': '+',\n            'op2': 3\n        }\n    \n        logging.info(f'Sending calculation request: {calculation_data}')\n        calculation_response = self.client.post('/calc', data=json.dumps(calculation_data),\n                                                content_type='application/json',\n                                                headers={'x-auth-token': token})\n    \n        logging.info(f'Received response with status code: {calculation_response.status_code}')\n        assert 200 == calculation_response.status_code\n        logging.info(f'Login response status code: {calculation_response.status_code}')\n        calculation_response_data = json.loads(calculation_response.get_data())\n        assert 'success' == calculation_response_data['status']\n        logging.info(f'Login response data: {calculation_response_data}')\n>       assert calculation_response_data['data']['token'] is not None, \"Token is missing in the response data.\"\nE       TypeError: 'int' object is not subscriptable\n\ntest_calculator.py:72: TypeError"}, "description": "Test valid addition operation after successful login and ensure token is returned", "attachments": [{"name": "log", "source": "f65e3a58-e05f-4eb4-ac89-9e0cacd48c18-attachment.txt", "type": "text/plain"}], "start": 1745234159493, "stop": 1745234159515, "uuid": "b8d4b0dc-2146-4bc9-b044-c973ab45d037", "historyId": "ce83a1b9e5c1097c6a2e41e67a072c80", "testCaseId": "ce83a1b9e5c1097c6a2e41e67a072c80", "fullName": "tests.test_calculator.TestCalculate#test_Calculator_ValidAdditionOperation_LoginSuccessAndTokenReturned", "labels": [{"name": "severity", "value": "critical"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_calculator"}, {"name": "subSuite", "value": "TestCalculate"}, {"name": "host", "value": "User-PC"}, {"name": "thread", "value": "22456-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_calculator"}]}