{"name": "test_Calculator_ValidAdditionOperation_LoginSuccessAndTokenReturned", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"userName\"]\"}\n  (Session info: chrome=135.0.7049.96); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF70D4E5355+78597]\n\tGetHandleVerifier [0x00007FF70D4E53B0+78688]\n\t(No symbol) [0x00007FF70D2991AA]\n\t(No symbol) [0x00007FF70D2EF149]\n\t(No symbol) [0x00007FF70D2EF3FC]\n\t(No symbol) [0x00007FF70D342467]\n\t(No symbol) [0x00007FF70D31712F]\n\t(No symbol) [0x00007FF70D33F2BB]\n\t(No symbol) [0x00007FF70D316EC3]\n\t(No symbol) [0x00007FF70D2E03F8]\n\t(No symbol) [0x00007FF70D2E1163]\n\tGetHandleVerifier [0x00007FF70D78EF0D+2870973]\n\tGetHandleVerifier [0x00007FF70D7896B8+2848360]\n\tGetHandleVerifier [0x00007FF70D7A6993+2967875]\n\tGetHandleVerifier [0x00007FF70D50019A+188746]\n\tGetHandleVerifier [0x00007FF70D50847F+222255]\n\tGetHandleVerifier [0x00007FF70D4ED2D4+111236]\n\tGetHandleVerifier [0x00007FF70D4ED482+111666]\n\tGetHandleVerifier [0x00007FF70D4D35A9+5465]\n\tBaseThreadInitThunk [0x00007FF8BF3B7374+20]\n\tRtlUserThreadStart [0x00007FF8C11DCC91+33]", "trace": "self = <test_calc.TestCalculate object at 0x000002A1C8EBEE40>\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.description('Test valid addition operation after successful login and ensure token is returned')\n    def test_Calculator_ValidAdditionOperation_LoginSuccessAndTokenReturned(self):\n       logging.info('Attempting to log in with valid credentials')\n>      self.login_page.log_in(\"admin\", \"123\")\n\ntest_calc.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\login_page.py:12: in log_in\n    self.set_username(username)\npages\\login_page.py:18: in set_username\n    username = self.driver.find_element(*LoginPageLocators.username_input)\nC:\\Users\\User\\anaconda3\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:898: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nC:\\Users\\User\\anaconda3\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002A1CB513B60>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...0D4D35A9+5465]\\\\n\\\\tBaseThreadInitThunk [0x00007FF8BF3B7374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FF8C11DCC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"userName\"]\"}\nE         (Session info: chrome=135.0.7049.96); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF70D4E5355+78597]\nE       \tGetHandleVerifier [0x00007FF70D4E53B0+78688]\nE       \t(No symbol) [0x00007FF70D2991AA]\nE       \t(No symbol) [0x00007FF70D2EF149]\nE       \t(No symbol) [0x00007FF70D2EF3FC]\nE       \t(No symbol) [0x00007FF70D342467]\nE       \t(No symbol) [0x00007FF70D31712F]\nE       \t(No symbol) [0x00007FF70D33F2BB]\nE       \t(No symbol) [0x00007FF70D316EC3]\nE       \t(No symbol) [0x00007FF70D2E03F8]\nE       \t(No symbol) [0x00007FF70D2E1163]\nE       \tGetHandleVerifier [0x00007FF70D78EF0D+2870973]\nE       \tGetHandleVerifier [0x00007FF70D7896B8+2848360]\nE       \tGetHandleVerifier [0x00007FF70D7A6993+2967875]\nE       \tGetHandleVerifier [0x00007FF70D50019A+188746]\nE       \tGetHandleVerifier [0x00007FF70D50847F+222255]\nE       \tGetHandleVerifier [0x00007FF70D4ED2D4+111236]\nE       \tGetHandleVerifier [0x00007FF70D4ED482+111666]\nE       \tGetHandleVerifier [0x00007FF70D4D35A9+5465]\nE       \tBaseThreadInitThunk [0x00007FF8BF3B7374+20]\nE       \tRtlUserThreadStart [0x00007FF8C11DCC91+33]\n\nC:\\Users\\User\\anaconda3\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException"}, "description": "Test valid addition operation after successful login and ensure token is returned", "attachments": [{"name": "log", "source": "ef3b85b4-f509-4a53-8410-5d80a81bc22b-attachment.txt", "type": "text/plain"}], "start": 1745340356780, "stop": 1745340356800, "uuid": "8637a05b-749f-4f92-81d5-4e7d6d652e34", "historyId": "c3be2610b9f8e3036c6c0165a29ffc1a", "testCaseId": "c3be2610b9f8e3036c6c0165a29ffc1a", "fullName": "tests.test_calc.TestCalculate#test_Calculator_ValidAdditionOperation_LoginSuccessAndTokenReturned", "labels": [{"name": "severity", "value": "critical"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_calc"}, {"name": "subSuite", "value": "TestCalculate"}, {"name": "host", "value": "User-PC"}, {"name": "thread", "value": "16076-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_calc"}]}