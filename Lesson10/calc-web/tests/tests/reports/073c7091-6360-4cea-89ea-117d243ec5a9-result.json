{"name": "test_Calculator_ValidAdditionOperation_LoginSuccessAndTokenReturned", "status": "broken", "statusDetails": {"message": "FileNotFoundError: [WinError 3] Системе не удается найти указанный путь", "trace": "self = <test_calculator.TestCalculate object at 0x00000260AAEA7230>\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.description('Test valid addition operation after successful login and ensure token is returned')\n    def test_Calculator_ValidAdditionOperation_LoginSuccessAndTokenReturned(self):\n        logging.info('Starting test for valid addition operation with login.')\n    \n        login_data = {\n            'userName': 'admin',\n            'password': '123'\n        }\n    \n        login_response = self.client.post('/login', data=json.dumps(login_data), content_type='application/json')\n        logging.info('Login response status code: %d', login_response.status_code)\n        assert 200 == login_response.status_code\n    \n        login_response_data = json.loads(login_response.get_data())\n        logging.info('Login response data: %s', login_response_data)\n        assert 'success' == login_response_data['status']\n        token = login_response_data['data']['token']\n    \n        calculation_data = {\n            'op1': 5,\n            'operation': '+',\n            'op2': 3\n        }\n    \n        logging.info('Sending calculation request: %s', calculation_data)\n    \n        calculation_response = self.client.post('/calc', data=json.dumps(calculation_data),\n                                                content_type='application/json',\n                                                headers={'x-auth-token': token})\n    \n        logging.info('Calculation response status code: %d', calculation_response.status_code)\n        assert 200 == calculation_response.status_code\n    \n        calculation_response_data = json.loads(calculation_response.get_data())\n        logging.info('Calculation response data: %s', calculation_response_data)\n        assert 'success' == calculation_response_data['status']\n        assert 8 == calculation_response_data['data']\n    \n>       self.save_screenshot(f'./tests/screenshots/'\n                                    f'test_Calculator_ValidAdditionOperation_LoginSuccessAndTokenReturned.png')\n\ntest_calculator.py:80: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_calculator.py:39: in save_screenshot\n    allure.attach.file(source=path + name, attachment_type=allure.attachment_type.PNG)\nC:\\Users\\User\\anaconda3\\Lib\\site-packages\\allure_commons\\_allure.py:213: in file\n    plugin_manager.hook.attach_file(source=source, name=name, attachment_type=attachment_type, extension=extension)\nC:\\Users\\User\\anaconda3\\Lib\\site-packages\\pluggy\\_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\nC:\\Users\\User\\anaconda3\\Lib\\site-packages\\pluggy\\_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\nC:\\Users\\User\\anaconda3\\Lib\\site-packages\\allure_pytest\\listener.py:256: in attach_file\n    self.allure_logger.attach_file(uuid4(), source, name=name, attachment_type=attachment_type, extension=extension)\nC:\\Users\\User\\anaconda3\\Lib\\site-packages\\allure_commons\\reporter.py:160: in attach_file\n    plugin_manager.hook.report_attached_file(source=source, file_name=file_name)\nC:\\Users\\User\\anaconda3\\Lib\\site-packages\\pluggy\\_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\nC:\\Users\\User\\anaconda3\\Lib\\site-packages\\pluggy\\_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\nC:\\Users\\User\\anaconda3\\Lib\\site-packages\\allure_commons\\logger.py:39: in report_attached_file\n    shutil.copy2(source, destination)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nsrc = './tests/screenshots2025-04-21_19-20-37__./tests/screenshots/test_Calculator_ValidAdditionOperation_LoginSuccessAndTokenReturned.png.png'\ndst = WindowsPath('C:/Users/User/Documents/kirpichenko_tatyana/Lesson10/calc-web/tests/tests/reports/95d789f5-34e1-46d7-9ae2-44c1b4d41195-attachment.png')\n\n    def copy2(src, dst, *, follow_symlinks=True):\n        \"\"\"Copy data and metadata. Return the file's destination.\n    \n        Metadata is copied with copystat(). Please see the copystat function\n        for more information.\n    \n        The destination may be a directory.\n    \n        If follow_symlinks is false, symlinks won't be followed. This\n        resembles GNU's \"cp -P src dst\".\n        \"\"\"\n        if os.path.isdir(dst):\n            dst = os.path.join(dst, os.path.basename(src))\n    \n        if hasattr(_winapi, \"CopyFile2\"):\n            src_ = os.fsdecode(src)\n            dst_ = os.fsdecode(dst)\n            flags = _winapi.COPY_FILE_ALLOW_DECRYPTED_DESTINATION # for compat\n            if not follow_symlinks:\n                flags |= _winapi.COPY_FILE_COPY_SYMLINK\n            try:\n>               _winapi.CopyFile2(src_, dst_, flags)\nE               FileNotFoundError: [WinError 3] Системе не удается найти указанный путь\n\nC:\\Users\\User\\anaconda3\\Lib\\shutil.py:460: FileNotFoundError"}, "description": "Test valid addition operation after successful login and ensure token is returned", "attachments": [{"source": "95d789f5-34e1-46d7-9ae2-44c1b4d41195-attachment.png", "type": "image/png"}, {"name": "log", "source": "817a13d9-5c95-4da5-bc41-2294ef3cd0bc-attachment.txt", "type": "text/plain"}], "start": 1745252437864, "stop": 1745252438115, "uuid": "a1451a96-b723-4609-beff-25ecc3fe2fbc", "historyId": "ce83a1b9e5c1097c6a2e41e67a072c80", "testCaseId": "ce83a1b9e5c1097c6a2e41e67a072c80", "fullName": "tests.test_calculator.TestCalculate#test_Calculator_ValidAdditionOperation_LoginSuccessAndTokenReturned", "labels": [{"name": "severity", "value": "critical"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_calculator"}, {"name": "subSuite", "value": "TestCalculate"}, {"name": "host", "value": "User-PC"}, {"name": "thread", "value": "26424-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_calculator"}]}