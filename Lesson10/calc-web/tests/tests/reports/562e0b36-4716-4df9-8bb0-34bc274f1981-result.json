{"name": "test_Calculator_ValidAdditionOperation_LoginSuccessAndTokenReturned", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"signIn\"]\"}\n  (Session info: chrome=135.0.7049.96); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF7FD755355+78597]\n\tGetHandleVerifier [0x00007FF7FD7553B0+78688]\n\t(No symbol) [0x00007FF7FD5091AA]\n\t(No symbol) [0x00007FF7FD55F149]\n\t(No symbol) [0x00007FF7FD55F3FC]\n\t(No symbol) [0x00007FF7FD5B2467]\n\t(No symbol) [0x00007FF7FD58712F]\n\t(No symbol) [0x00007FF7FD5AF2BB]\n\t(No symbol) [0x00007FF7FD586EC3]\n\t(No symbol) [0x00007FF7FD5503F8]\n\t(No symbol) [0x00007FF7FD551163]\n\tGetHandleVerifier [0x00007FF7FD9FEF0D+2870973]\n\tGetHandleVerifier [0x00007FF7FD9F96B8+2848360]\n\tGetHandleVerifier [0x00007FF7FDA16993+2967875]\n\tGetHandleVerifier [0x00007FF7FD77019A+188746]\n\tGetHandleVerifier [0x00007FF7FD77847F+222255]\n\tGetHandleVerifier [0x00007FF7FD75D2D4+111236]\n\tGetHandleVerifier [0x00007FF7FD75D482+111666]\n\tGetHandleVerifier [0x00007FF7FD7435A9+5465]\n\tBaseThreadInitThunk [0x00007FFC0CC37374+20]\n\tRtlUserThreadStart [0x00007FFC0D8BCC91+33]", "trace": "self = <test_calculator.TestCalculate object at 0x0000024A2FDE7590>\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.description('Test valid addition operation after successful login and ensure token is returned')\n    def test_Calculator_ValidAdditionOperation_LoginSuccessAndTokenReturned(self):\n        logging.info('Starting test for valid addition operation with login.')\n    \n        login_data = {\n            'userName': 'admin',\n            'password': '123'\n        }\n    \n        login_response = self.client.post('/login', data=json.dumps(login_data), content_type='application/json')\n        logging.info('Login response status code: %d', login_response.status_code)\n        assert 200 == login_response.status_code\n    \n        login_response_data = json.loads(login_response.get_data())\n        logging.info('Login response data: %s', login_response_data)\n        assert 'success' == login_response_data['status']\n        token = login_response_data['data']['token']\n    \n>       self.login_page.click_login_button()\n\ntest_calculator.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\login_page.py:30: in click_login_button\n    login_button = self.driver.find_element(*LoginPageLocators.login_button)\nC:\\Users\\User\\anaconda3\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:898: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nC:\\Users\\User\\anaconda3\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000024A2E380E90>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...FD7435A9+5465]\\\\n\\\\tBaseThreadInitThunk [0x00007FFC0CC37374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFC0D8BCC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"signIn\"]\"}\nE         (Session info: chrome=135.0.7049.96); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7FD755355+78597]\nE       \tGetHandleVerifier [0x00007FF7FD7553B0+78688]\nE       \t(No symbol) [0x00007FF7FD5091AA]\nE       \t(No symbol) [0x00007FF7FD55F149]\nE       \t(No symbol) [0x00007FF7FD55F3FC]\nE       \t(No symbol) [0x00007FF7FD5B2467]\nE       \t(No symbol) [0x00007FF7FD58712F]\nE       \t(No symbol) [0x00007FF7FD5AF2BB]\nE       \t(No symbol) [0x00007FF7FD586EC3]\nE       \t(No symbol) [0x00007FF7FD5503F8]\nE       \t(No symbol) [0x00007FF7FD551163]\nE       \tGetHandleVerifier [0x00007FF7FD9FEF0D+2870973]\nE       \tGetHandleVerifier [0x00007FF7FD9F96B8+2848360]\nE       \tGetHandleVerifier [0x00007FF7FDA16993+2967875]\nE       \tGetHandleVerifier [0x00007FF7FD77019A+188746]\nE       \tGetHandleVerifier [0x00007FF7FD77847F+222255]\nE       \tGetHandleVerifier [0x00007FF7FD75D2D4+111236]\nE       \tGetHandleVerifier [0x00007FF7FD75D482+111666]\nE       \tGetHandleVerifier [0x00007FF7FD7435A9+5465]\nE       \tBaseThreadInitThunk [0x00007FFC0CC37374+20]\nE       \tRtlUserThreadStart [0x00007FFC0D8BCC91+33]\n\nC:\\Users\\User\\anaconda3\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException"}, "description": "Test valid addition operation after successful login and ensure token is returned", "attachments": [{"name": "log", "source": "45c92fb4-039a-4d20-b1e0-5c85ea2f1b72-attachment.txt", "type": "text/plain"}], "start": 1745249884617, "stop": 1745249884651, "uuid": "0fb6c15d-114a-4c3e-b269-e3ccb718d49c", "historyId": "ce83a1b9e5c1097c6a2e41e67a072c80", "testCaseId": "ce83a1b9e5c1097c6a2e41e67a072c80", "fullName": "tests.test_calculator.TestCalculate#test_Calculator_ValidAdditionOperation_LoginSuccessAndTokenReturned", "labels": [{"name": "severity", "value": "critical"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_calculator"}, {"name": "subSuite", "value": "TestCalculate"}, {"name": "host", "value": "User-PC"}, {"name": "thread", "value": "25032-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_calculator"}]}