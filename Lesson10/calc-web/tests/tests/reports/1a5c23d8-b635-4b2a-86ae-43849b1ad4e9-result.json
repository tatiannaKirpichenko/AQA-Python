{"name": "test_Calculator_enterAdditionTwoFractionalNumbers_LoginSuccessAndTokenReturnedErrorResult", "status": "failed", "statusDetails": {"message": "AssertionError: assert 500 == 200\n +  where 200 = <WrapperTestResponse streamed [200 OK]>.status_code", "trace": "self = <test_calculator.CalculateTest testMethod=test_Calculator_enterAdditionTwoFractionalNumbers_LoginSuccessAndTokenReturnedErrorResult>\n\n    def test_Calculator_enterAdditionTwoFractionalNumbers_LoginSuccessAndTokenReturnedErrorResult(self):\n        logging.info('Starting test for valid subtraction operation with login.')\n    \n        login_data = {\n            'userName': 'admin',\n            'password': '123'\n        }\n    \n        logging.info(f'Attempting to log in with credentials: {login_data}')\n        login_response = self.client.post('/login', data=json.dumps(login_data), content_type='application/json')\n        logging.info(f'Login response status code: {login_response.status_code}')\n        assert 200 == login_response.status_code\n        login_response_data = json.loads(login_response.get_data())\n        logging.info(f'Login response data: {login_response_data}')\n        assert 'success' == login_response_data['status']\n        logging.info(f'Login response data: {login_response_data}')\n        token = login_response_data['data']['token']\n        logging.info(f'Received token: {token}')\n    \n        calculation_data = {\n            'op1': 0.5,\n            'operation': '+',\n            'op2': 0.7\n        }\n    \n        logging.info(\"Sending calculation request with data: %s\", calculation_data)\n        calculation_response = self.client.post('/calc', data=json.dumps(calculation_data),\n                                                content_type='application/json',\n                                                headers={'x-auth-token': token})\n    \n        logging.info(\"Calculation response status code: %d\", calculation_response.status_code)\n>       assert 500 == calculation_response.status_code\nE       assert 500 == 200\nE        +  where 200 = <WrapperTestResponse streamed [200 OK]>.status_code\n\ntest_calculator.py:345: AssertionError"}, "attachments": [{"name": "log", "source": "a25a5e43-414d-41b2-b95e-63fd91e69c4b-attachment.txt", "type": "text/plain"}], "start": 1745155810250, "stop": 1745155810256, "uuid": "8328fc1f-4877-4af8-b88e-4e689b1e0676", "historyId": "773f4a41e2ff84806fcc27ed02ad6e3f", "testCaseId": "773f4a41e2ff84806fcc27ed02ad6e3f", "fullName": "tests.test_calculator.CalculateTest#test_Calculator_enterAdditionTwoFractionalNumbers_LoginSuccessAndTokenReturnedErrorResult", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_calculator"}, {"name": "subSuite", "value": "CalculateTest"}, {"name": "host", "value": "User-PC"}, {"name": "thread", "value": "8752-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_calculator"}]}