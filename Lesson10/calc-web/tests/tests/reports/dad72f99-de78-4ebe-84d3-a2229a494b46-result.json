{"name": "test_Calculator_enterStringInsteadOfNumber_LoginSuccessAndTokenReturned", "status": "broken", "statusDetails": {"message": "AttributeError: 'CalculateTest' object has no attribute 'driver'", "trace": "self = <test_calculator.CalculateTest testMethod=test_Calculator_enterStringInsteadOfNumber_LoginSuccessAndTokenReturned>\n\n    def test_Calculator_enterStringInsteadOfNumber_LoginSuccessAndTokenReturned(self):\n        logging.info('Starting test for valid subtraction operation with login.')\n    \n        login_data = {\n            'userName': 'admin',\n            'password': '123'\n        }\n    \n        logging.info(f'Attempting to log in with credentials: {login_data}')\n        login_response = self.client.post('/login', data=json.dumps(login_data), content_type='application/json')\n        logging.info(f'Login response status code: {login_response.status_code}')\n        assert 200 == login_response.status_code\n        login_response_data = json.loads(login_response.get_data())\n        logging.info(f'Login response data: {login_response_data}')\n        assert 'success' == login_response_data['status']\n        logging.info(f'Login response data: {login_response_data}')\n        token = login_response_data['data']['token']\n        logging.info(f'Received token: {token}')\n    \n        calculation_data = {\n            'op1': 'string1',\n            'operation': '+',\n            'op2': 'string2'\n        }\n    \n        logging.info(f'Performing calculation with invalid data: {calculation_data}')\n    \n        calculation_response = self.client.post('/calc', data=json.dumps(calculation_data),\n                                                content_type='application/json',\n                                                headers={'x-auth-token': token})\n    \n        logging.info(f'Calculation response status code: {calculation_response.status_code}')\n        assert 500 == calculation_response.status_code\n        calculation_response_data = json.loads(calculation_response.get_data())\n        logging.info(f'Calculation response data: {calculation_response_data}')\n        assert 'error' == calculation_response_data['status']\n        self.assertIn('message', calculation_response_data)\n>       self.driver.save_screenshot(f'./tests/screenshots/'\n                                    f'test_Calculator_enterStringInsteadOfNumber_LoginSuccessAndTokenReturned.png')\nE       AttributeError: 'CalculateTest' object has no attribute 'driver'\n\ntest_calculator.py:260: AttributeError"}, "attachments": [{"name": "log", "source": "45be9246-b733-46bc-817b-6f5754bb6c05-attachment.txt", "type": "text/plain"}], "start": 1745152759709, "stop": 1745152759734, "uuid": "2fd2b00c-65aa-4622-82f7-29005347cedf", "historyId": "fafee34821e6d61bc1c8f5d17610edfd", "testCaseId": "fafee34821e6d61bc1c8f5d17610edfd", "fullName": "tests.test_calculator.CalculateTest#test_Calculator_enterStringInsteadOfNumber_LoginSuccessAndTokenReturned", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_calculator"}, {"name": "subSuite", "value": "CalculateTest"}, {"name": "host", "value": "User-PC"}, {"name": "thread", "value": "18636-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_calculator"}]}